name: Java CI with Gradle

on:
  push:
    branches: 
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

permissions:
  contents: read

jobs:
  build:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle prod
      if: github.ref == 'refs/heads/master'
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 
      with:
        arguments: build -Dspring.profiles.active=prod
    - name: Build with Gradle dev
      if: github.ref == 'refs/heads/develop'
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 
      with:
        arguments: build -Dspring.profiles.active=dev
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: cicdsample
        path: build/libs/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: cicdsample
          path: build2
      - name: download jar prod
        if: github.ref == 'refs/heads/master'
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT }}
          source: build2/*
          target: /gss/backEnd/jar/prod
      - name: executing remote ssh commands prod
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /gss/backEnd/jar/prod/build2/
            docker build -t gss_server_prod ./
            docker rm -f gss_server_prod
            docker run -d -i -p 8080:8080 --name gss_server_prod gss_server_prod
            docker cp /gss/frontEnd/gssFe/baseOrder.xlsx gss_server_prod:/
            
      - name: download jar dev
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT }}
          source: build2/*
          target: /gss/backEnd/jar/dev
          
      - name: executing remote ssh commands prod
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /gss/backEnd/jar/dev/build2/
            docker build -t gss_server_dev ./
            docker rm -f gss_server_dev
            docker run -d -i -p 8090:8090 --name gss_server gss_server_dev
            docker cp /gss/frontEnd/gssFe/baseOrder.xlsx gss_server_dev:/
